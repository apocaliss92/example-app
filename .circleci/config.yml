version: 2.1

orbs:
  heroku: circleci/heroku@1.2.4

jobs:
  publish-github-release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            npm install gh-release
            VERSION=v.$PROJECT_VERSION.<< pipeline.number >>
            npm version VERSION
            gh-release -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
  heroku-deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git
  lint_and_test:
    docker:
      - image: circleci/node:12-browsers
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
      - run:
          name: Install local dependencies
          command: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Linting
          command: npm run lint
      - run:
          name: Testing
          command: npm run test
      #      - run:
      #          name: End to End Test
      #          command: npm run e2e

workflows:
  version: 2.1
  main:
    jobs:
      #      - lint_and_test:
      #            filters:
      #              branches:
      #                only:
      #                  - master
      - publish-github-release:
          #          requires:
          #            - lint_and_test
          filters:
            branches:
              only:
                - master
      - heroku-deploy:
          #          requires:
          #            - lint_and_test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
